import customtkinter as ctk
from CTkMessagebox import CTkMessagebox
import json
import os

JSON_FILE = "recommendations.json"

def load_recommendations():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏–∑ JSON-—Ñ–∞–π–ª–∞"""
    if not os.path.exists(JSON_FILE):
        with open(JSON_FILE, "w", encoding="utf-8") as f:
            json.dump({}, f, ensure_ascii=False, indent=4)
    with open(JSON_FILE, "r", encoding="utf-8") as f:
        return json.load(f)

def refresh_disease_list(app):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –±–æ–ª–µ–∑–Ω–µ–π –≤ —Å–ø—Ä–∞–≤–æ—á–Ω–∏–∫–µ"""
    recommendations = load_recommendations()

    # –û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    for widget in app.disease_list_frame.winfo_children():
        widget.destroy()

    app.disease_var.set("")  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é –±–æ–ª–µ–∑–Ω—å

    for disease in recommendations.keys():
        radio_btn = ctk.CTkRadioButton(
            app.disease_list_frame,
            text=disease,
            variable=app.disease_var,
            value=disease,
            font=("Inter", 14),
            command=lambda: display_recommendation(app, app.disease_var.get())
        )
        radio_btn.pack(anchor="w", padx=5, pady=2)

def confirm_delete_disease(app):
    """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –±–æ–ª–µ–∑–Ω–∏"""
    disease = app.disease_var.get()
    if not disease:
        CTkMessagebox(title="–û—à–∏–±–∫–∞", message="–í—ã–±–µ—Ä–∏—Ç–µ –±–æ–ª–µ–∑–Ω—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è!", icon="cancel")
        return

    result = CTkMessagebox(title="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", message=f"–£–¥–∞–ª–∏—Ç—å '{disease}'?", icon="warning",
                           option_1="–û—Ç–º–µ–Ω–∞", option_2="–£–¥–∞–ª–∏—Ç—å")
    if result.get() == "–£–¥–∞–ª–∏—Ç—å":
        delete_disease(app, disease)

def delete_disease(app, disease):
    """–£–¥–∞–ª—è–µ—Ç –±–æ–ª–µ–∑–Ω—å –∏–∑ JSON"""
    recommendations = load_recommendations()
    if disease in recommendations:
        del recommendations[disease]

    with open(JSON_FILE, "w", encoding="utf-8") as f:
        json.dump(recommendations, f, ensure_ascii=False, indent=4)

    refresh_disease_list(app)
    app.recommendation_text.configure(state="normal")
    app.recommendation_text.delete("1.0", "end")
    app.recommendation_text.configure(state="disabled")

    CTkMessagebox(title="–ì–æ—Ç–æ–≤–æ", message=f"–ë–æ–ª–µ–∑–Ω—å '{disease}' —É–¥–∞–ª–µ–Ω–∞!", icon="check")

def display_recommendation(app, disease):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –±–æ–ª–µ–∑–Ω–∏"""
    recommendations = load_recommendations()
    app.recommendation_text.configure(state="normal")
    app.recommendation_text.delete("1.0", "end")
    app.recommendation_text.insert("1.0", recommendations.get(disease, "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö"))
    app.recommendation_text.configure(state="disabled")  # –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –≤–≤–æ–¥

def enable_editing(app):
    """–†–∞–∑–±–ª–æ–∫–∏—Ä—É–µ—Ç –ø–æ–ª–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    app.recommendation_text.configure(state="normal")
    app.btn_save.configure(state="normal")  # –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"

def save_edited_recommendation(app):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é"""
    disease = app.disease_var.get()
    if not disease:
        CTkMessagebox(title="–û—à–∏–±–∫–∞", message="–í—ã–±–µ—Ä–∏—Ç–µ –±–æ–ª–µ–∑–Ω—å –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è!", icon="cancel")
        return

    new_text = app.recommendation_text.get("1.0", "end").strip()
    if not new_text:
        CTkMessagebox(title="–û—à–∏–±–∫–∞", message="–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç–æ–π!", icon="cancel")
        return

    recommendations = load_recommendations()
    recommendations[disease] = new_text

    with open(JSON_FILE, "w", encoding="utf-8") as f:
        json.dump(recommendations, f, ensure_ascii=False, indent=4)

    app.recommendation_text.configure(state="disabled")
    app.btn_save.configure(state="disabled")  # –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å"

    CTkMessagebox(title="–ì–æ—Ç–æ–≤–æ", message=f'–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –¥–ª—è "{disease}" –æ–±–Ω–æ–≤–ª–µ–Ω–∞!', icon="check")

def create_directory_tab(app):
    """–í–∫–ª–∞–¥–∫–∞ '–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π'"""
    tab_directory = app.tabview.add("üìö –°–ø—Ä–∞–≤–æ—á–Ω–∏–∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π")

    frame = ctk.CTkFrame(tab_directory, corner_radius=20, fg_color="white")
    frame.pack(pady=20, padx=20, fill="both", expand=True)

    ctk.CTkLabel(frame, text="–í—ã–±–µ—Ä–∏—Ç–µ –±–æ–ª–µ–∑–Ω—å:", font=("Montserrat", 16, "bold"), text_color="black").pack(pady=5)

    # –°–ø–∏—Å–æ–∫ –±–æ–ª–µ–∑–Ω–µ–π —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
    app.disease_var = ctk.StringVar()

    app.scrollable_frame = ctk.CTkScrollableFrame(frame, width=800, height=200, corner_radius=12, fg_color="#F8F9FA")
    app.scrollable_frame.pack(pady=5, padx=5, expand=True)

    app.disease_list_frame = ctk.CTkFrame(app.scrollable_frame, fg_color="transparent")
    app.disease_list_frame.pack(fill="both", expand=True)

    refresh_disease_list(app)

    app.recommendation_text = ctk.CTkTextbox(frame, width=800, height=250, corner_radius=12, font=("Inter", 14))
    app.recommendation_text.pack(pady=5, padx=5, expand=True)
    app.recommendation_text.configure(state="disabled")

    app.btn_edit = ctk.CTkButton(frame, text="‚úè –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", command=lambda: enable_editing(app), fg_color="blue",
                                 corner_radius=15, font=("Montserrat", 14))
    app.btn_edit.pack(pady=5)

    app.btn_save = ctk.CTkButton(frame, text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", command=lambda: save_edited_recommendation(app),
                                 fg_color="green",
                                 corner_radius=15, font=("Montserrat", 14))
    app.btn_save.pack(pady=5)
    app.btn_save.configure(state="disabled")  # –ó–∞–±–ª–æ–∫–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" –¥–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

    app.btn_delete = ctk.CTkButton(frame, text="üóë –£–¥–∞–ª–∏—Ç—å –±–æ–ª–µ–∑–Ω—å", command=lambda: confirm_delete_disease(app),
                                   fg_color="red", corner_radius=15, font=("Montserrat", 14))
    app.btn_delete.pack(pady=10)

    refresh_disease_list(app)
